use serde::{Serialize, Deserialize};
use serde_with::{serde_as, DisplayFromStr};
use sea_orm::sea_query::types::NaiveDateTime;
use crate::model::{{ table_name }}::{{ model_name }};

#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct {{ response_model_name }} {
    {% for column in columns_response -%}{% if column.is_date %}
    #[serde_as(as = "DisplayFromStr")]
    #[serde(with = "serde_with::chrono::naive_datetime")]{% endif %}
    pub {{ column.column_name }}: {% if column.nullable  %}Option<{{ column.rust_type  }}>{% else %}{{ column.rust_type  }}{% endif %}, // {{ column.column_comment  }}
    {% endfor %}
}

impl From<{{ model_name }}> for {{ response_model_name }} {
    fn from(model: {{ model_name }}) -> Self {
        Self {
            {% for column in columns_response -%}
            {{ column.column_name }}: model.{{ column.column_name }},
            {% endfor %}
        }
    }
}