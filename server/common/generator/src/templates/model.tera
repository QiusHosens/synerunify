use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, serde::Serialize, serde::Deserialize)]
#[sea_orm(table_name = "{{ table_name }}")]
pub struct {{ model_name }} {
    {% for column in columns %}
    /// {{ column.column_comment  }}
    #[serde(rename = "{{ column.column_name  }}")]{% if column.is_key  %}
    #[sea_orm(primary_key, auto_increment = false)]{% endif %}
    pub {{ column.column_name }}: {% if column.nullable  %}Option<{{ column.rust_type  }}>{% else %}{{ column.rust_type  }}{% endif %},
    {% endfor %}
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}