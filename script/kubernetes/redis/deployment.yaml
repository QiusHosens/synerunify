---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: redis
  namespace: synerunify
  labels:
    app: redis
  annotations:
    deployment.kubernetes.io/revision: '5'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      volumes:
        - name: host-time
          hostPath:
            path: /etc/localtime
            type: ''
        - name: data
          hostPath:
            path: /data/volume/redis/data
            type: ''
        - name: conf
          hostPath:
            path: /data/volume/redis/conf/redis.conf
            type: ''
      containers:
        - name: redis
          image: 'redis:7.4.2-alpine'
          ports:
            - name: tcp-6379
              containerPort: 6379
              protocol: TCP
          resources: {}
          volumeMounts:
            - name: host-time
              readOnly: true
              mountPath: /etc/localtime
            - name: data
              mountPath: /var/lib/redis
            - name: conf
              mountPath: /usr/local/etc/redis/redis.conf
          lifecycle:
            postStart:
              exec:
                command:
                  - /bin/sh
                  - '-c'
                  - redis-cli config set requirepass synerunify
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccountName: default
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
...
---
kind: Service
apiVersion: v1
metadata:
  name: redis
  namespace: synerunify
  labels:
    app: redis
spec:
  ports:
    - name: tcp-6379
      protocol: TCP
      port: 6379
      targetPort: 6379
      nodePort: 6379
  selector:
    app: redis
  type: NodePort
  sessionAffinity: None
  externalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  internalTrafficPolicy: Cluster
...
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: redis
spec:
  host: "*"
  trafficPolicy:
    tls:
      mode: DISABLE
...